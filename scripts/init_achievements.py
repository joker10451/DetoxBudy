"""
@file: init_achievements.py
@description: –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
@dependencies: sqlalchemy, achievement models
@created: 2024-12-19
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from src.detoxbuddy.database.database import get_db
from src.detoxbuddy.database.models.achievement import Achievement, AchievementType
from src.detoxbuddy.core.config import settings
import structlog

logger = structlog.get_logger()


def init_achievements():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    db = next(get_db())
    
    # –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
    achievements_data = [
        # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ —Å–µ—Å—Å–∏—è–º —Ñ–æ–∫—É—Å–∞
        {
            "name": "–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏",
            "description": "–ó–∞–≤–µ—Ä—à–∏—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é —Å–µ—Å—Å–∏—é —Ñ–æ–∫—É—Å–∞",
            "type": AchievementType.FOCUS_SESSIONS,
            "condition_value": 1,
            "points": 10,
            "badge_icon": "üéØ"
        },
        {
            "name": "–§–æ–∫—É—Å-–º–∞—Å—Ç–µ—Ä",
            "description": "–ó–∞–≤–µ—Ä—à–∏—Ç–µ 10 —Å–µ—Å—Å–∏–π —Ñ–æ–∫—É—Å–∞",
            "type": AchievementType.FOCUS_SESSIONS,
            "condition_value": 10,
            "points": 50,
            "badge_icon": "üß†"
        },
        {
            "name": "–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è",
            "description": "–ó–∞–≤–µ—Ä—à–∏—Ç–µ 50 —Å–µ—Å—Å–∏–π —Ñ–æ–∫—É—Å–∞",
            "type": AchievementType.FOCUS_SESSIONS,
            "condition_value": 50,
            "points": 200,
            "badge_icon": "‚ö°"
        },
        {
            "name": "–ú–∞—Å—Ç–µ—Ä —Ñ–æ–∫—É—Å–∞",
            "description": "–ó–∞–≤–µ—Ä—à–∏—Ç–µ 100 —Å–µ—Å—Å–∏–π —Ñ–æ–∫—É—Å–∞",
            "type": AchievementType.FOCUS_SESSIONS,
            "condition_value": 100,
            "points": 500,
            "badge_icon": "üëë"
        },
        
        # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—é —ç–∫—Ä–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
        {
            "name": "–¶–∏—Ñ—Ä–æ–≤–æ–π –¥–µ—Ç–æ–∫—Å",
            "description": "–°–æ–∫—Ä–∞—Ç–∏—Ç–µ —Å—Ä–µ–¥–Ω–µ–µ —ç–∫—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ 6 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å",
            "type": AchievementType.SCREEN_TIME_REDUCTION,
            "condition_value": 120,  # 2 —á–∞—Å–∞ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è (8 - 6 = 2 —á–∞—Å–∞ = 120 –º–∏–Ω—É—Ç)
            "points": 30,
            "badge_icon": "üì±"
        },
        {
            "name": "–û—Å–æ–∑–Ω–∞–Ω–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ",
            "description": "–°–æ–∫—Ä–∞—Ç–∏—Ç–µ —Å—Ä–µ–¥–Ω–µ–µ —ç–∫—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ 4 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å",
            "type": AchievementType.SCREEN_TIME_REDUCTION,
            "condition_value": 240,  # 4 —á–∞—Å–∞ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è
            "points": 100,
            "badge_icon": "üå±"
        },
        {
            "name": "–¶–∏—Ñ—Ä–æ–≤–∞—è —Å–≤–æ–±–æ–¥–∞",
            "description": "–°–æ–∫—Ä–∞—Ç–∏—Ç–µ —Å—Ä–µ–¥–Ω–µ–µ —ç–∫—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ 2 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å",
            "type": AchievementType.SCREEN_TIME_REDUCTION,
            "condition_value": 360,  # 6 —á–∞—Å–æ–≤ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è
            "points": 300,
            "badge_icon": "üïäÔ∏è"
        },
        
        # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ —Å–µ—Ä–∏—è–º –¥–Ω–µ–π
        {
            "name": "–ù–µ–¥–µ–ª—è —É—Å–ø–µ—Ö–∞",
            "description": "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥",
            "type": AchievementType.STREAK_DAYS,
            "condition_value": 7,
            "points": 50,
            "badge_icon": "üìÖ"
        },
        {
            "name": "–ú–µ—Å—è—Ü –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã",
            "description": "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å 30 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥",
            "type": AchievementType.STREAK_DAYS,
            "condition_value": 30,
            "points": 200,
            "badge_icon": "üìÜ"
        },
        {
            "name": "–°—Ç–æ–¥–Ω–µ–≤–∫–∞",
            "description": "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å 100 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥",
            "type": AchievementType.STREAK_DAYS,
            "condition_value": 100,
            "points": 1000,
            "badge_icon": "üíé"
        },
        
        # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º
        {
            "name": "–ü—É–Ω–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å",
            "description": "–í—ã–ø–æ–ª–Ω–∏—Ç–µ 10 –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π",
            "type": AchievementType.REMINDERS_COMPLETED,
            "condition_value": 10,
            "points": 25,
            "badge_icon": "‚è∞"
        },
        {
            "name": "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å",
            "description": "–í—ã–ø–æ–ª–Ω–∏—Ç–µ 50 –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π",
            "type": AchievementType.REMINDERS_COMPLETED,
            "condition_value": 50,
            "points": 100,
            "badge_icon": "‚úÖ"
        },
        {
            "name": "–ú–∞—Å—Ç–µ—Ä –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è",
            "description": "–í—ã–ø–æ–ª–Ω–∏—Ç–µ 100 –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π",
            "type": AchievementType.REMINDERS_COMPLETED,
            "condition_value": 100,
            "points": 250,
            "badge_icon": "üìã"
        },
        
        # –ü–µ—Ä–≤—ã–µ —à–∞–≥–∏
        {
            "name": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å",
            "description": "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ —Å–∏—Å—Ç–µ–º–µ",
            "type": AchievementType.FIRST_TIME,
            "condition_value": 1,
            "points": 5,
            "badge_icon": "üëã"
        },
        {
            "name": "–ü–µ—Ä–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ",
            "description": "–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–µ –ø–µ—Ä–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ",
            "type": AchievementType.FIRST_TIME,
            "condition_value": 1,
            "points": 10,
            "badge_icon": "üìù"
        },
        {
            "name": "–ü–µ—Ä–≤–∞—è —Å–µ—Å—Å–∏—è",
            "description": "–ó–∞–≤–µ—Ä—à–∏—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é —Å–µ—Å—Å–∏—é —Ñ–æ–∫—É—Å–∞",
            "type": AchievementType.FIRST_TIME,
            "condition_value": 1,
            "points": 15,
            "badge_icon": "üéØ"
        },
        
        # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        {
            "name": "–ë—Ä–æ–Ω–∑–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å",
            "description": "–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ 5 —É—Ä–æ–≤–Ω—è",
            "type": AchievementType.MILESTONE,
            "condition_value": 5,
            "points": 100,
            "badge_icon": "ü•â"
        },
        {
            "name": "–°–µ—Ä–µ–±—Ä—è–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å",
            "description": "–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ 10 —É—Ä–æ–≤–Ω—è",
            "type": AchievementType.MILESTONE,
            "condition_value": 10,
            "points": 250,
            "badge_icon": "ü•à"
        },
        {
            "name": "–ó–æ–ª–æ—Ç–æ–π —É—Ä–æ–≤–µ–Ω—å",
            "description": "–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ 20 —É—Ä–æ–≤–Ω—è",
            "type": AchievementType.MILESTONE,
            "condition_value": 20,
            "points": 500,
            "badge_icon": "ü•á"
        },
        {
            "name": "–ü–ª–∞—Ç–∏–Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å",
            "description": "–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ 50 —É—Ä–æ–≤–Ω—è",
            "type": AchievementType.MILESTONE,
            "condition_value": 50,
            "points": 1000,
            "badge_icon": "üíé"
        }
    ]
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤ –±–∞–∑–µ
        existing_count = db.query(Achievement).count()
        if existing_count > 0:
            logger.info(f"–í –±–∞–∑–µ —É–∂–µ –µ—Å—Ç—å {existing_count} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é.")
            return
        
        # –°–æ–∑–¥–∞–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        for achievement_data in achievements_data:
            achievement = Achievement(**achievement_data)
            db.add(achievement)
        
        db.commit()
        logger.info(f"–°–æ–∑–¥–∞–Ω–æ {len(achievements_data)} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: {e}")
        db.rollback()
        raise
    finally:
        db.close()


if __name__ == "__main__":
    init_achievements()

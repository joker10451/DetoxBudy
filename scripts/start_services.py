#!/usr/bin/env python3
"""
@file: start_services.py
@description: –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
@dependencies: redis, celery, database
@created: 2024-08-24
"""

import sys
import os
import subprocess
import time
import logging
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.insert(0, str(Path(__file__).parent.parent / "src"))

from detoxbuddy.core.config import settings

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

logger = logging.getLogger(__name__)


def check_redis_installed():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Redis"""
    try:
        result = subprocess.run(['redis-server', '--version'], 
                              capture_output=True, text=True)
        return result.returncode == 0
    except FileNotFoundError:
        return False


def start_redis():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Redis —Å–µ—Ä–≤–µ—Ä"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis...")
    
    if not check_redis_installed():
        print("‚ùå Redis –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Redis:")
        print("   Windows: https://github.com/microsoftarchive/redis/releases")
        print("   macOS: brew install redis")
        print("   Ubuntu: sudo apt-get install redis-server")
        return False
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ Redis
        from redis import Redis
        redis_client = Redis.from_url(settings.CELERY_BROKER_URL)
        redis_client.ping()
        print("‚úÖ Redis —É–∂–µ –∑–∞–ø—É—â–µ–Ω")
        return True
    except:
        print("üöÄ –ó–∞–ø—É—Å–∫ Redis —Å–µ—Ä–≤–µ—Ä–∞...")
        try:
            # –ó–∞–ø—É—Å–∫–∞–µ–º Redis –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
            subprocess.Popen(['redis-server'], 
                           stdout=subprocess.DEVNULL, 
                           stderr=subprocess.DEVNULL)
            time.sleep(2)  # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            redis_client = Redis.from_url(settings.CELERY_BROKER_URL)
            redis_client.ping()
            print("‚úÖ Redis –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Redis: {e}")
            return False


def start_celery_services():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Celery worker –∏ beat"""
    print("\nüöÄ –ó–∞–ø—É—Å–∫ Celery —Å–µ—Ä–≤–∏—Å–æ–≤...")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º Celery beat –≤ —Ñ–æ–Ω–µ
        print("üìÖ –ó–∞–ø—É—Å–∫ Celery beat...")
        beat_process = subprocess.Popen([
            sys.executable, 'scripts/run_celery_beat.py'
        ], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
        
        time.sleep(1)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º Celery worker –≤ —Ñ–æ–Ω–µ
        print("üë∑ –ó–∞–ø—É—Å–∫ Celery worker...")
        worker_process = subprocess.Popen([
            sys.executable, 'scripts/run_celery.py'
        ], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
        
        time.sleep(2)
        
        print("‚úÖ Celery —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Celery: {e}")
        return False


def start_telegram_bot():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Telegram –±–æ—Ç–∞"""
    print("\nü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ
        bot_process = subprocess.Popen([
            sys.executable, 'main.py'
        ], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
        
        time.sleep(2)
        print("‚úÖ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ DetoxBuddy")
    print("=" * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Redis
    redis_ok = start_redis()
    if not redis_ok:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Redis!")
        print("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Redis")
        print("2. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –±—Ä–æ–∫–µ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, SQLite)")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Celery —Å–µ—Ä–≤–∏—Å—ã
    celery_ok = start_celery_services()
    if not celery_ok:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Celery!")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞
    bot_ok = start_telegram_bot()
    if not bot_ok:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Telegram –±–æ—Ç–∞!")
        return
    
    print("\n" + "=" * 50)
    print("üéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("\nüìã –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:")
    print(f"‚úÖ Redis: {'–†–∞–±–æ—Ç–∞–µ—Ç' if redis_ok else '–û—à–∏–±–∫–∞'}")
    print(f"‚úÖ Celery: {'–†–∞–±–æ—Ç–∞–µ—Ç' if celery_ok else '–û—à–∏–±–∫–∞'}")
    print(f"‚úÖ Telegram –±–æ—Ç: {'–†–∞–±–æ—Ç–∞–µ—Ç' if bot_ok else '–û—à–∏–±–∫–∞'}")
    
    print("\nüí° –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:")
    print("1. –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /start –±–æ—Ç—É")
    print("2. –°–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: /remind 5m –¢–µ—Å—Ç–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ")
    print("3. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: /reminders")
    
    print("\nüõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    
    try:
        # –î–µ—Ä–∂–∏–º —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã–º
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...")


if __name__ == "__main__":
    main()
